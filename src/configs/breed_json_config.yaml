# Single-task Breed Classification Training Configuration (JSON-based)
# This configuration is for training a breed-only model using JSON datasets

# Model Configuration
backbone: "efficientnet_v2_s" # Model architecture: mobilenet_v2, mobilenet_v3_small, mobilenet_v3_large
mode: "breed" # Training mode: breed, emotion, multitask

# Training Parameters
batch_size: 32
learning_rate: 3e-4
weight_decay: 1e-4
epochs: 50
early_stopping: 10 # Patience for early stopping

# Scheduler configuration (config-file only, no CLI arguments)
scheduler: "reduce_lr_on_plateau" # Options: "reduce_lr_on_plateau", "cosine", "step", "none"
# Parameters for ReduceLROnPlateau scheduler
scheduler_patience: 3
scheduler_factor: 0.2
scheduler_min_lr: 0.000001
# Parameters for StepLR scheduler
scheduler_step_size: 15
scheduler_gamma: 0.1
# Parameters for CosineAnnealingLR scheduler
scheduler_t_max: 20 # Number of epochs for a complete cosine cycle

# Model Parameters
img_size: 224

# Data Configuration - JSON Datasets
train_json: "../data/json_breed_datasets/train_dataset.json"
val_json: "../data/json_breed_datasets/val_dataset.json"
test_json: "../data/json_breed_datasets/test_dataset.json"
data_root: "../data/data-breed/processed" # Root directory for image paths in JSON

# Training Configuration
num_workers: 8
device: "cuda" # or "cpu"

# Logging and Checkpoints
checkpoint_dir: "checkpoints"
use_tensorboard: true
